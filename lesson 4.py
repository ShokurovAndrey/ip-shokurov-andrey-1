# Easy

# Задание-1:
# Напишите функцию, переводящую км в мили и выводящую информацию на консоль
# т.е функция ничего не возвращает, а выводит на консоль ответ самостоятельно
# Предполагается, что 1км = 1,609 мили
def convert(km):
    miles = km * float(0.6)
    print('В ', km, 'км: ', round(miles, 2), 'миль')
    print(f'{miles:.2f}')


km = float(input('Введите км, для конвертирования в мили: '))

(convert(km))


# Задание-2:
# Напишите функцию, округляющую полученное произвольное десятичное число
# до кол-ва знаков (кол-во знаков передается вторым аргументом).
# Округление должно происходить по математическим правилам (0.6 --> 1, 0.4 --> 0).
# Для решения задачи не используйте встроенные функции и функции из модуля math.

def my_round(num, nd):
    n = num * (10 ** nd) + 0.41
    n = n // 1
    return n / (10 ** nd)


print(my_round(2.1234567, 5))
print(my_round(2.1999967, 5))
print(my_round(2.9999967, 5))


# Задание-3:
# Дан шестизначный номер билета. Определить, является ли билет счастливым.
# Решение реализовать в виде функции.
# Билет считается счастливым, если сумма его первых и последних цифр равны.
# !!!P.S.: функция не должна НИЧЕГО print's, должна возвращать либо True,
# ибо False (если счастливый и несчастливый соответственно)

def lucky_ticket(ticket):
    s = str(ticket)
    count = len(s)
    center = count // 2

    first_sum = 0
    for i in range(0, center):
        first_sum += int(s[i])

    second_sum = 0
    for i in range(center, count):
        second_sum += int(s[i])

    return first_sum == second_sum


print(lucky_ticket(123006))
print(lucky_ticket(12321))
print(lucky_ticket(436751))


# Normal

# Задание-1:
# Напишите функцию, возвращающую ряд Фибоначчи с n-элемента до m-элемента.
# Первыми элементами ряда считать цифры 1 1

def fibonacci(n, m):
    x = int(input('Введите кол-во значений: '))
    print(n, m, end=' ')
    for i in range(3, x + 1):
        print(n + m, end=' ')
        b = n
        n = m
        m = b + n
    print()


fibonacci(1, 2)