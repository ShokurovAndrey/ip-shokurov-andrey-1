# Easy

# Задача-1:
# Дан список фруктов.
# Напишите программу, выводящую фрукты в виде нумерованного списка,
# выровненного по правой стороне.

# Пример:
# Дано: ["яблоко", "банан", "киви", "арбуз"]
# Вывод:
# 1. яблоко
# 2.  банан
# 3.   киви
# 4.  арбуз

# Подсказка: воспользоваться методом .format()

lavka_ashota = ['apple', 'banana', 'mango']  # :D
i = 0
while len(lavka_ashota) > i:
    print(i + 1, '{:>10}'.format(lavka_ashota[i]))
    i += 1
print()

for fruit in lavka_ashota:
    i += 1
    print(i, '{:>10}'.format(fruit))
print()

# Задача-2:
# Даны два произвольные списка.
# Удалите из первого списка элементы, присутствующие во втором списке.

a = ['23', '0', '11', '-20', '8', '999']
b = ['23', '1', '11', '-20', '100', '999']
for i in b:
    if i in a:
        a.remove(i)  # remove() - удаляет первый объект из списка, значение которого равно аргументу
print(a)

# Задача-3:
# Дан произвольный список из целых чисел.
# Получите НОВЫЙ список из элементов исходного, выполнив следующие условия:
# если элемент кратен двум, то разделить его на 4, если не кратен, то умножить на два.

one_l = [2, 7, 5, 6, 9, 15]
new_l = []
last_name = len(one_l)
for i in range(last_name):
    if one_l[i] % 2 == 0:
        new_l.append(one_l[i] / 4)
else:
    new_l.append(one_l[i] * 2)
print(new_l)

# Normal

# Задача-1:
# Дан список, заполненный произвольными целыми числами, получите новый список,
# элементами которого будут квадратные корни элементов исходного списка,
# но только если результаты извлечения корня не имеют десятичной части и
# если такой корень вообще можно извлечь
# Пример: Дано: [2, -5, 8, 9, -25, 25, 4] Результат: [3, 5, 2]

import math

my_list = [2, -5, 8, 9, -25, 25, 4]
new_list = []
for item in my_list:
    if item > 0 and math.sqrt(item) % 1 == 0:
        new_list.append(int(math.sqrt(item)))
print(new_list)

# Задача-2: Дана дата в формате dd.mm.yyyy, например: 02.11.2013.
# Ваша задача вывести дату в текстовом виде, например: второе ноября 2013 года.
# Склонением пренебречь (2000 года, 2010 года)
# Пусть дана дата 01.01.2000

dana_data = '01.01.2000'
data_list = dana_data.split('.')
dict_months = {
    '01': 'января',
    '02': 'феврал',
    '03': 'марта',
    '04': 'апреля',
    '05': 'мая',
    '06': 'июня',
    '07': 'июля',
    '08': 'августа',
    '09': 'сентября',
    '10': 'октября',
    '11': 'ноября',
    '12': 'декабря',
}
dict_days = {
    '01': 'первое', '02': 'второе', '03': 'третье', '04': 'четвёртое', '05': 'пятое',
    '06': 'шестое', '07': 'седьмое', '08': 'восьмое', '09': 'девятое', '10': 'десятое',
    '11': 'одиннадцатое', '12': 'двенадцатое', '13': 'тринадцатое', '14': 'четырнадцатое', '15': 'пятнадцатое',
    '16': 'шестнадцатое', '17': 'семнадцатое', '18': 'восемнадцатое', '19': 'девятнадцатое', '20': 'двадцатое',
    '21': 'двадцать первое', '22': 'двадцать второе', '23': 'двадцать третье', '24': 'двадцать четвёртое',
    '25': 'двадцать пятое', '26': 'двадцать шестое', '27': 'двадцать седьмое', '28': 'двадцать восьмое',
    '29': 'двадцать девятое', '30': 'тридцатое', '31': 'тридцать первое',
}
for key in dict_days:
    if data_list[0] == key:
        data_list[0] = dict_days[key]

for key in dict_months:
    if data_list[1] == key:
        data_list[1] = dict_months[key]

answer_data = data_list[0] + ' ' + data_list[1] + ' ' + data_list[2] + ' ' "года"
print(answer_data)

# Задача-3: Напишите алгоритм, заполняющий список произвольными целыми числами
# в диапазоне от -100 до 100. В списке должно быть n - элементов.
# Подсказка:
# для получения случайного числа используйте функцию randint() модуля random

import random

n = int(input('введите количество случайных элементов в списке: '))
my_list = []
for el in range(n):
    my_list.append(random.randint(-100, 100))
print(my_list)

# Задача-4: Дан список, заполненный произвольными целыми числами.
# Получите новый список, элементами которого будут:
# а) неповторяющиеся элементы исходного списка:
# например, lst = [1, 2, 4, 5, 6, 2, 5, 2], нужно получить lst2 = [1, 2, 4, 5, 6]
# б) элементы исходного списка, которые не имеют повторений:
# например, lst = [1 , 2, 4, 5, 6, 2, 5, 2], нужно получить lst2 = [1, 4, 6]

# Решение a)
my_list = [1, 2, 3, 4, 5, 5, 4, 5, 6, 7, 8, 10, 10, -1, -2, -1]
new_list = set(my_list)
print(new_list)

# Решение б)
next_list = []
for item in my_list:
    if my_list.count(item) == 1:
        next_list.append(item)
print(next_list)

# Hard

# Задание-1: уравнение прямой вида y = kx + b задано в виде строки.
# Определить координату y точки с заданной координатой x.
# equation = 'y = -12x + 11111140.2121'
# x = 2.5
# вычислите и выведите y
equation = 'y = -12x + 11111140.2121'
x = 2.5
name = equation.split(' ')
first_name = str(name[2])
name[2] = first_name[:-1]
two_name = float(name[2]) * x + float(name[4])
print(two_name)

# Задание-2: Дата задана в виде строки формата 'dd.mm.yyyy'.
# Проверить, корректно ли введена дата.
# Условия корректности:
# 1. День должен приводиться к целому числу в диапазоне от 1 до 30(31)
# (в зависимости от месяца, февраль не учитываем)
# 2. Месяц должен приводиться к целому числу в диапазоне от 1 до 12
# 3. Год должен приводиться к целому положительному числу в диапазоне от 1 до 9999
# 4. Длина исходной строки для частей должна быть в соответствии с форматом
# (т.е. 2 символа для дня, 2 - для месяца, 4 - для года)
# Пример корректной даты
# date = '01.11.1985'
# Примеры некорректных дат
# date = '01.22.1001'
# date = '1.12.1001'
# date = '-2.10.3001'

my_date = input('Введите дату через точку: ')
converted_date = my_date.split('.')
converted_day = int(converted_date[0])
converted_month = int(converted_date[1])
converted_year = int(converted_date[2])
long_month = [1, 3, 5, 7, 8, 10, 12]
if len(converted_date[0]) != 2 or len(converted_date[1]) != 2 or len(converted_date[2]) != 4:
    print('Некорректен формат даты')
elif converted_day > 31 or converted_day < 1:
    print('Введён не корректный день')
elif converted_month > 12 or converted_month < 1:
    print('Введён не корректный месяц')
elif converted_year > 9999 or converted_year < 1:
    print('Введён не корректный год')
elif converted_month not in long_month and converted_day > 30:
    print('Введён не корректный день')
else:
    print('Дата введена корректно: ', my_date)

# Задание-3: "Перевёрнутая башня" (Задача олимпиадного уровня)
# Вавилонцы решили построить удивительную башню —
# расширяющуюся к верху и содержащую бесконечное число этажей и комнат.
# Она устроена следующим образом — на первом этаже одна комната,
# затем идет два этажа, на каждом из которых по две комнаты,
# затем идёт три этажа, на каждом из которых по три комнаты и так далее:
# ...
# 12 13 14
# 9 10 11
# 6 7 8
# 4 5
# 2 3
# 1
# Эту башню решили оборудовать лифтом —- и вот задача:
# нужно научиться по номеру комнаты определять,
# на каком этаже она находится и какая она по счету слева на этом этаже.
# Входные данные: В первой строчке задан номер комнаты N, 1 ≤ N ≤ 2 000 000 000.
# Выходные данные: Два целых числа — номер этажа и порядковый номер слева на этаже.
# Пример:
# Вход: 13
# Выход: 6 2
# Вход: 11
# Выход: 5 3

N = 10003423
floor = 1
room = 1
answer_floor = 0
answer_room = None
while N > 0:
    for current_floor in range(floor):
        answer_floor += 1
for current_room in range(room):
    N -= 1
    if N == 0:
        answer_room = current_room + 1
        break
    if N == 0:
        break
floor += 1
room += 1
print(answer_floor, answer_room)
